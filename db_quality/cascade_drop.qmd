---
title: "orphan_ripple_drop"
format: html
editor: source
---

```{r}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, dbplyr, here, janitor, lubridate, RPostgres, stringr, DBI, parsedate, uuid, hms, RIBBiTR-BII/ribbitrrr)

# connect to database
dbcon = hopToDB("wibbitr")

```

Pull metadata and tables

```{r}
mdc = tbl(dbcon, Id("survey_data", "metadata_columns")) %>%
  collect()

# pull relevant chain tables from 
db_bd = tbl(dbcon, Id("survey_data", "bd_qpcr_results"))
db_mucosome = tbl(dbcon, Id("survey_data", "mucosome_results"))
db_sample = tbl(dbcon, Id("survey_data", "sample"))

db_aural = tbl(dbcon, Id("survey_data", "aural"))
db_capture = tbl(dbcon, Id("survey_data", "capture"))
db_edna = tbl(dbcon, Id("survey_data", "edna"))
db_env = tbl(dbcon, Id("survey_data", "environmental"))
db_ves = tbl(dbcon, Id("survey_data", "ves"))

db_survey = tbl(dbcon, Id("survey_data", "survey"))
db_visit = tbl(dbcon, Id("survey_data", "visit"))
db_site = tbl(dbcon, Id("survey_data", "site"))
db_region = tbl(dbcon, Id("survey_data", "region"))
db_country = tbl(dbcon, Id("survey_data", "country"))


```

# Visit orphans
```{r}
drop_ids = sn_vids
  
drop_visit = db_visit %>%
  filter(visit_id %in% drop_ids)

count = as.character(drop_visit %>% count() %>% pull())
cat("visit:", count, "\n")

drop_survey = db_survey %>%
  right_join(drop_visit, by = "visit_id") %>%
  select(all_of(colnames(db_survey))) %>%
  filter(!is.na(survey_id))

hope = drop_visit %>%
  collect()
peace = drop_survey %>%
  collect()

count = as.character(drop_survey %>% count() %>% pull())
cat("survey:", count, "\n")

drop_env = db_env %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_env))) %>%
  filter(!is.na(environmental_id))

count = as.character(drop_env %>% count() %>% pull())
cat("env:", count, "\n")

drop_edna = db_edna %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_edna))) %>%
  filter(!is.na(edna_id))

count = as.character(drop_edna %>% count() %>% pull())
cat("edna:", count, "\n")

drop_aural = db_aural %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_aural))) %>%
  filter(!is.na(aural_id))

count = as.character(drop_aural %>% count() %>% pull())
cat("aural:", count, "\n")

drop_ves = db_ves %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_ves))) %>%
  filter(!is.na(ves_id))

count = as.character(drop_ves %>% count() %>% pull())
cat("ves:", count, "\n")

drop_capture = db_capture %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_capture))) %>%
  filter(!is.na(capture_id))

count = as.character(drop_capture %>% count() %>% pull())
cat("capture:", count, "\n")

# all associated capture samples
drop_sample_all = db_sample %>%
  right_join(drop_capture, by = "capture_id") %>%
  select(all_of(colnames(db_sample))) %>%
  filter(!is.na(sample_id))

# associated capture samples with bd results
bd_samples = db_bd %>%
  select(sample_id) %>%
  distinct() %>%
  inner_join(drop_sample_all, by = "sample_id") %>%
  filter(!is.na(sample_id))

# associated capture samples with mucosome results
mucosome_samples = db_mucosome %>%
  select(sample_id) %>%
  distinct() %>%
  inner_join(drop_sample_all, by = "sample_id") %>%
  filter(!is.na(sample_id))

# updated bd samples
update_sample_bd = drop_sample_all %>%
  inner_join(bd_samples %>% select(sample_id), by = "sample_id") %>%
  collect()

update_sample_musosome = drop_sample_all %>%
  inner_join(mucosome_samples %>% select(sample_id), by = "sample_id") %>%
  collect()

update_sample = bind_rows(update_sample_bd,
                          update_sample_musosome) %>%
  mutate(capture_id = NA)


count = as.character(update_sample %>% count() %>% pull())
cat("sample_update:", count, "\n")

drop_sample = drop_sample_all %>%
  anti_join(bd_samples, by = "sample_id") %>%
  anti_join(mucosome_samples, by = "sample_id")

count = as.character(drop_sample %>% count() %>% pull())
cat("sample_drop:", count, "\n")

```

# cascade drop
```{r}

dbBegin(dbcon)

tryCatch(
  {
    db_sample = db_sample %>%
      rows_delete(drop_sample %>% select(sample_id), by="sample_id", unmatched = "ignore", in_place=TRUE)
    
    temp_sample = stage_to_temp(dbcon, db_sample, update_sample)
    pointer = tbl(dbcon, temp_sample)
    db_sample = db_sample %>%
      rows_update(pointer, by="sample_id", unmatched = "ignore", in_place=TRUE)
    
    db_aural = db_aural %>%
      rows_delete(drop_aural %>% select(aural_id), by="aural_id", unmatched = "ignore", in_place=TRUE)
    db_capture = db_capture %>%
      rows_delete(drop_capture %>% select(capture_id), by="capture_id", unmatched = "ignore", in_place=TRUE)
    db_ves = db_ves %>%
      rows_delete(drop_ves %>% select(ves_id), by="ves_id", unmatched = "ignore", in_place=TRUE)
    db_env = db_env %>%
      rows_delete(drop_env %>% select(environmental_id), by="environmental_id", unmatched = "ignore", in_place=TRUE)
    db_edna = db_edna %>%
      rows_delete(drop_edna %>% select(edna_id), by="edna_id", unmatched = "ignore", in_place=TRUE)
    
    db_survey = db_survey %>%
      rows_delete(drop_survey %>% select(survey_id), by="survey_id", unmatched = "ignore", in_place=TRUE)
    
    db_visit = db_visit %>%
      rows_delete(drop_visit %>% select(visit_id), by="visit_id", unmatched = "ignore", in_place=TRUE)
    
    # Commit the transaction if successful
    dbCommit(dbcon)
    print("Transaction successful!")
    
  }, error = function(e) {
    # Rollback in case of error
    dbRollback(dbcon)
    message("Transaction failed: ", e$message)
  })

```
# survey orphans
```{r}
drop_ids = c("db0d5506-455f-47f4-9639-feeeaa8a6a9c", "0833d67a-c038-4172-b23b-26be65c834f4", 
"086a8a26-e562-4720-bf04-2d4b67df941f", "0d303bdd-50db-41b0-ab56-ca2c22a8577c", 
"1cf879a3-afe7-4226-a432-e5c4c6a8984a", "2e81f633-c86a-49c0-ada0-c475f855afaf", 
"411d0dd0-f2f1-4645-94c8-b23c585df21c", "50b4ad67-2eae-4e50-b7b2-405bdd293207", 
"5419d525-59c7-4c2c-961e-3c847b9a10f5", "5b65c94f-7009-4bce-b241-40c06374592d", 
"5c120873-4786-4143-83f2-f4597cc0c227", "668830bc-5e87-455c-ab3e-de37b964c137", 
"68a804ff-8b19-46a1-989b-ebe64ed06f97", "8b8de63d-2fe7-4629-8722-697877f29bf8", 
"8c7d91c7-3756-4f6e-8561-322c7f769803", "9559cd31-871f-4e4c-9c16-e62586377430", 
"958a9c58-bc52-4e44-87c6-9aa7763add47", "a3717cce-b3d2-49fa-aa4e-41cddffacb07", 
"b122c4ee-20e4-4a2d-9eda-90da5fd8352e", "bdd80f08-e8ad-4a4e-a2bd-7c5882d97bc2", 
"c5ee4a9a-4492-4f0c-a839-c74a565e3c0b", "cca8a7aa-b2ea-474c-838b-e5337296a41a", 
"cfb79f55-b468-4e62-add6-f354ad752882", "e8ca2b0a-d2d8-4419-881e-faf155b622b7", 
"f16c2c80-174f-4b77-8062-cca238e1ad31", "fe987a67-5b26-4990-9e1a-f550ab4151ea", 
"5269bcbf-2486-435b-9f9d-e9fe31445f5b", "53bf9593-60c7-4320-97cc-3881e4764161"
)

drop_survey = db_survey %>%
  filter(survey_id %in% drop_ids)
count = as.character(drop_survey %>% count() %>% pull())
cat("drop_survey:", count, "\n")

drop_env = db_env %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_env))) %>%
  filter(!is.na(environmental_id))
count = as.character(drop_env %>% count() %>% pull())
cat("drop_env:", count, "\n")

drop_aural = db_aural %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_aural))) %>%
  filter(!is.na(aural_id))
count = as.character(drop_aural %>% count() %>% pull())
cat("drop_aural:", count, "\n")

drop_capture = db_capture %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_capture))) %>%
  filter(!is.na(capture_id))
count = as.character(drop_capture %>% count() %>% pull())
cat("drop_capture:", count, "\n")

drop_ves = db_ves %>%
  right_join(drop_survey, by = "survey_id") %>%
  select(all_of(colnames(db_ves))) %>%
  filter(!is.na(ves_id))
count = as.character(drop_ves %>% count() %>% pull())
cat("drop_ves:", count, "\n")

```

# cascade drop
```{r}

dbBegin(dbcon)

tryCatch(
  {
    db_aural = db_aural %>%
      rows_delete(drop_aural, by="aural_id", unmatched = "ignore", in_place=TRUE)
    db_capture = db_capture %>%
      rows_delete(drop_capture, by="capture_id", unmatched = "ignore", in_place=TRUE)
    db_ves = db_ves %>%
      rows_delete(drop_ves, by="ves_id", unmatched = "ignore", in_place=TRUE)
    db_env = db_env %>%
      rows_delete(drop_env, by="environmental_id", unmatched = "ignore", in_place=TRUE)
    db_survey = db_survey %>%
      rows_delete(drop_survey, by="survey_id", unmatched = "ignore", in_place=TRUE)
    
    
    # Commit the transaction if successful
    dbCommit(dbcon)
    print("Transaction successful!")
    
  }, error = function(e) {
    # Rollback in case of error
    dbRollback(dbcon)
    message("Transaction failed: ", e$message)
  })

```
```{r}

test = db_visit %>%
  left_join(db_site, by = "site_id") %>%
  left_join(db_region, by = "region_id") %>%
  filter(region == "california") %>%
  collect()

```
