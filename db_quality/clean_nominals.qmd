---
title: "clean_nominals"
format: html
---

```{r}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, dbplyr, here, janitor, lubridate, RPostgres, stringr, DBI, parsedate, uuid, hms, RIBBiTR-BII/ribbitrrr)
# librarian::shelf(RIBBiTR-BII/ribbitrrr, update_all = TRUE)

# connect to database
dbcon = hopToDB()

```

Pull metadata and tables

```{r}
mdc = tbl(dbcon, Id("survey_data", "metadata_columns")) %>%
  collect()

# pull relevant chain tables from DB
db_aural = tbl(dbcon, Id("survey_data", "aural"))
db_capture = tbl(dbcon, Id("survey_data", "capture"))
db_ves = tbl(dbcon, Id("survey_data", "ves"))
db_env = tbl(dbcon, Id("survey_data", "environmental"))

db_survey = tbl(dbcon, Id("survey_data", "survey"))
db_visit = tbl(dbcon, Id("survey_data", "visit"))
db_site = tbl(dbcon, Id("survey_data", "site"))
db_region = tbl(dbcon, Id("survey_data", "region"))
db_country = tbl(dbcon, Id("survey_data", "country"))

db_cmr = tbl(dbcon, Id("survey_data", "cmr"))

db_sample = tbl(dbcon, Id("survey_data", "sample"))
db_bd = tbl(dbcon, Id("survey_data", "bd_qpcr_results"))

```

# environmental table
```{r}
clean_env = db_env %>%
  collect() %>%
  mutate(sky = case_match(sky,
                          "Clear" ~ "clear",
                          c("precip", "Precipitating") ~ "precipitating",
                          "m_cloudy" ~ "mostly_cloudy",
                          "p_cloudy" ~ "partly_cloudy",
                          .default = sky))

temp_env = stage_to_temp(dbcon, db_env, clean_env)
pointer = tbl(dbcon, temp_env)
db_env = rows_update(db_env, pointer, by="environmental_id", in_place = TRUE, unmatched = "ignore")

sort(unique(db_env %>% pull(sky)))

```

# clean microhabitat
```{r}
db_capture = tbl(dbcon, (Id("survey_data", "capture")))
                 
mhab = rbind(db_capture %>%
               select(microhabitat_type),
             db_ves %>%
               select(microhabitat_type)) %>%
  group_by(microhabitat_type) %>%
  summarise(n = n()) %>%
  collect() %>%
  arrange(microhabitat_type)

capture_update = db_capture %>%
  select(microhabitat_type) %>%
  collect() %>%
  mutate(microhabitat_type = tolower(microhabitat_type),
         microhabitat_type = gsub("_", " ", microhabitat_type),
         microhabitat_type = gsub("on tree", "tree", microhabitat_type),
         microhabitat_type = gsub("1m", "1 m", microhabitat_type),
         microhabitat_type = case_match(microhabitat_type,
                                        "tree/ log/ bush above 1 m" ~ "tree/log/bush above 1 m",
                                        "boulder/rock" ~ "rock",
                                        "emergent vegetation (higher than 1 m)" ~ "emergent vegetation above 1 m",
                                        "emergent vegetation (lower than 1 m)" ~ "emergent vegetation below 0.1 m",
                                        "fine sub" ~ "fine substrate",
                                        "litter" ~ "leaf litter",
                                        "other" ~ NA_character_,
                                        "tree/log/bush (higher than 1 m)" ~ "tree/log/bush above 1 m",
                                        "tree/log/bush (lower than 1 m)" ~ "tree/log/bush below 1 m",
                                        "unknown" ~ NA_character_,
                                        "water flooded" ~ "water",
                                        "water pool" ~ "water",
                                        .default = microhabitat_type))%>%
  group_by(microhabitat_type) %>%
  summarise(n = n()) %>%
  arrange(microhabitat_type)

capture_mhab_notes = db_capture %>%
  select(microhabitat_notes) %>%
  collect() %>%
  group_by(microhabitat_notes) %>%
  summarise(n = n()) %>%
  arrange(microhabitat_notes)

```