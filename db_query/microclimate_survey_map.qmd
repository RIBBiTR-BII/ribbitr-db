---
title: "microclimate_survey_pull"
format: html
---


```{r}
librarian::shelf(tidyverse, dbplyr, here, janitor, lubridate, rio, RPostgres, stringr, DBI, parsedate, uuid, hms, RIBBiTR-BII/ribbitrrr, plotly)
# librarian::shelf(RIBBiTR-BII/ribbitrrr, update_all = TRUE)

## Connect to DB
dbcon <- hopToDB("ribbitr")

```

# example dataset
```{r}
# microclimate data
db_ts_temp = tbl(dbcon, Id("microclimate_data", "ts_temperature"))
# survey data
db_survey = tbl(dbcon, Id("survey_data", "survey"))
db_visit = tbl(dbcon, Id("survey_data", "visit"))
db_site = tbl(dbcon, Id("survey_data", "site"))
db_region = tbl(dbcon, Id("survey_data", "region"))
db_country = tbl(dbcon, Id("survey_data", "country"))


data_ex = db_survey %>%
  left_join(db_visit, by = "visit_id") %>%
  left_join(db_site, by = "site_id") %>%
  left_join(db_region, by = "region_id") %>%
  left_join(db_country, by = "country_id") %>%
  filter(date >= "2023-06-01",
         date <= "2023-08-01",
         region == "pennsylvania") %>%
  collect()

```

# call function
```{r}
test_1 = microclimate_presurvey(data_ex, dbcon, buffer = days(2), db_ts_temp, time_sensitive = FALSE, output_timezone = NA)
test_2 = microclimate_presurvey(data_ex, dbcon, buffer = days(14), db_ts_temp, time_sensitive = FALSE, output_timezone = NA)
test_3 = microclimate_presurvey(data_ex, dbcon, buffer = days(2), db_ts_temp, time_sensitive = TRUE, output_timezone = NA)
test_4 = microclimate_presurvey(data_ex, dbcon, buffer = days(2), db_ts_temp, time_sensitive = TRUE, output_timezone = "America/Los_Angeles")
```