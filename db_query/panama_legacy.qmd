---
title: "ribbitr_db: Bd swab & microclimate query"
author: "Cob Staines"
format: html
editor: visual
---

# RIBBiTR_DB: Pulling Bd swab & microclimate data

## Dependencies

```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, DBI, RPostgres, here)
```

## Connect to DB

```{r}
tryCatch({
    print("Connecting to Databaseâ€¦")
    con <- dbConnect(drv = dbDriver("Postgres"),
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

# dbDisconnect(connection)
```

## Query Bd swabs for site/species combos with samples \>= 150

```{r}

# return list of species and sites with swab counts >= threshold
# adjust threshold as desired
capture_q = "select *
	from ribbitr.survey_data.qpcr_bd_results qbr
	join ribbitr.survey_data.capture c
		on qbr.bd_swab_id = c.bd_swab_id
	join ribbitr.survey_data.survey s
		on c.survey_id =s.survey_id
	join ribbitr.survey_data.visit v
		on s.visit_id = v.visit_id 
	join ribbitr.survey_data.site s2 
		on v.site_id = s2.site_id 
	join ribbitr.survey_data.region r
		on s2.region_id = r.region_id
	join ribbitr.survey_data.location l
		on r.location_id = l.location_id
	where location = 'panama'
	and v.date < '2021-01-01'"

capture = dbGetQuery(connection,capture_q)

# unique list of species
(capture_spp = unique(capture$species_capture))

# unique list of sites

(capture_sites = unique(capture$site))
capture_sites = capture %>%
  select(site) %>%
  distinct()

```

```{r}
result <- tbl(con, Id("survey_data", "capture")) %>%
  inner_join(tbl(con, Id("survey_data", "survey")), by = "survey_id") %>%
  inner_join(tbl(con, Id("survey_data", "visit")), by = "visit_id") %>%
  inner_join(tbl(con, Id("survey_data", "site")), by = "site_id") %>%
  inner_join(tbl(con, Id("survey_data", "region")), by = "region_id") %>%
  inner_join(tbl(con, Id("survey_data", "location")), by = "location_id") %>%
  filter(location == 'panama')

result %>%
  select(date) %>%
  distinct() %>%
  arrange(desc(date))
  
```
