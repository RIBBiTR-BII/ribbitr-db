---
title: "Build data dictionaries"
author: "Cob Staines"
format: html
editor: visual
---

## Load Packages

```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, DBI, RPostgres, here)
```
## Connect to DB

```{r}
# establish connection
tryCatch({
  print("Connecting to Databaseâ€¦")
  connection <- dbConnect(dbDriver("Postgres"),
                          dbname = Sys.getenv("aws_dbname"),
                          host = Sys.getenv("aws_host"),
                          port = Sys.getenv("aws_port"),
                          user = Sys.getenv("aws_user"),
                          password = Sys.getenv("aws_password"),
                          timezone=NULL)
  print("Database Connected!")
},
error=function(cond) {
  print("Unable to connect to Database.")
})

```

## Pull database info from information_schema
Data on tables, columns, and constraints
Filter to user-defined schemas

```{r}
isch_q = "select
  c.table_catalog,
  c.table_schema,
  c.table_name,
  c.column_name,
  c.ordinal_position,
  c.is_nullable,
  c.data_type,
  c.udt_name,
  k.constraint_name,
  t.constraint_type
from information_schema.columns c
	left join information_schema.key_column_usage k
		on	c.table_catalog = k.table_catalog
		and c.table_schema = k.table_schema
		and c.table_name = k.table_name
		and c.column_name = k.column_name
	left join information_schema.table_constraints t
		on	k.table_catalog = t.table_catalog
		and k.table_schema = t.table_schema
		and k.table_name = t.table_name
		and k.constraint_name = t.constraint_name
	where c.table_schema not in ('pg_catalog', 'information_schema')
	order by c.table_schema, c.table_name, c.ordinal_position"



isch <- dbGetQuery(connection, isch_q) %>%
  mutate(natural_key = NA,
         units = NA,
         description = NA)

# write to file
write_csv(isch, here("staging", "metadata", "data_dict.csv"))

# dbDisconnect(connection)

```